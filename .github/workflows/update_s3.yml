name: Update Test Infomation in S3 for the UI
on:
  create:
  delete:
  push:
    branches:
      - 'main'
  workflow_dispatch:


jobs:
  update_ref_lists:
    name: Update List of Branches/Tags
    runs-on: ubuntu-latest
    # Limit to one of these jobs at a time
    concurrency: s3_sync_ref_lists
    if: ${{ github.event_name == 'create' || github.event_name == 'delete' }}
    env:
      WORK_DIR: workflow_output

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Gather repository info
      run: |
        # Make clean directory that we can use to sync with S3
        mkdir ${WORK_DIR}

        # Get names of all remote branches and put in json array
        git branch -r | sed -e "s/  origin\///" | sed -e "s/HEAD -> origin\/main//" | jq -ncR '[ inputs | select(length > 0) ]' > ${WORK_DIR}/framework_branches.json

        # Get tags and put in json array
        git tag | jq -ncR '[inputs]' > ${WORK_DIR}/framework_tags.json

    - name: Upload Metadata
      run: aws s3 sync ${WORK_DIR} s3://econgit/extreme_automation_tests

  update_docs:
    name: Update Keyword Documentation
    runs-on: ubuntu-latest
    # Limit to one of these jobs at a time
    concurrency: s3_sync_docs
    # Job is run on every merge to main
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch'}}
    env:
      DOCS_DIR: documentation
      BUILD_DIR: _build

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Environment
      run: |
        pip3 install -r requirements.txt
        pip3 install -r ${DOCS_DIR}/requirements.txt

    - name: Generate Documentation
      run: |
        cd ${DOCS_DIR}
        make html
        ls ${BUILD_DIR}

    - name: Upload Documentation
      # use --dryrun to test changes
      run: aws s3 sync --delete --exclude "_sources" ${DOCS_DIR}/${BUILD_DIR}/html s3://extreme-automation-framework-documentation
