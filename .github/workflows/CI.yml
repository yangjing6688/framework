name: CI Workflow
on:
  pull_request:
    branches: [main, RELEASE-**]

jobs:

  framework_sanity:
    name: Validate Framework Functionality
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.set-output.outputs.status }}

    steps:
    - name: Run sanity test
      run: |
        curl -X 'POST' \
          'https://autoiq.extremenetworks.com/tbedmgr/jobmgr/saved_job/executeSavedJobFromName' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/json' \
          -d '{
                "savedJobName": "pytest_framework_sanity",
                "testRepoBranch": "main",
                "frameworkRepoBranch": "${{ github.ref_name }}"
              }'


    - name: Set job status output
      if: ${{ always() }}
      id: set-output
      run: |
        echo "status=${{ job.status }}" >> $GITHUB_OUTPUT

  code_checks:
    name: Run code quality tools
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.set-output.outputs.status }}
    env:
      EXTAUTO_DIR: ./extauto
      SETUP_CFG: ./setup.cfg

    steps:
    - name: Setup environment
      run: |
        pip3 install flake8

    - name: Checkout local repo
      uses: actions/checkout@v3

    - name: Python syntax checking
      run: |
        printf '\n%s\n\n' "======== Running flake8 in /extauto ========"
        python3 -m flake8 --config=${SETUP_CFG} $EXTAUTO_DIR

        printf '\n%s\n\n' "======== Running flake8 in /ExtremeAutomation/Imports ========"
        python3 -m flake8 --config=${SETUP_CFG} ./ExtremeAutomation/Imports

        printf '\n%s\n\n' "======== Running flake8 in /ExtremeAutomation/Keywords ========"
        python3 -m flake8 --config=${SETUP_CFG} ./ExtremeAutomation/Keywords

        printf '\n%s\n\n' "======== Running flake8 in /keywords ========"
        python3 -m flake8 --config=${SETUP_CFG} ./keywords

    - name: Set job status output
      if: ${{ always() }}
      id: set-output
      run: |
        echo "status=${{ job.status }}" >> $GITHUB_OUTPUT
